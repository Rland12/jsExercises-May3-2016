QUnit.module("Function Exercises",function(){test("Create ready() function",function(){ok("undefined"!=typeof ready,"ready() is properly created."),equal(ready.length,0,"ready() should have 0 parameters."),expect(2)}),test("Create set() function",function(){ok("undefined"!=typeof set,"set() is properly created."),equal(set.length,1,"set() should have 1 parameter."),expect(2)}),test("Create go() function",function(){ok("undefined"!=typeof go,"go() is properly created."),equal(go.length,2,"go() should have 2 parameters defined."),expect(2)}),test("Create ditto() function",function(){ok("undefined"!=typeof ditto,"ditto() is properly created."),equal(ditto(1),1,"ditto(1) -> 1"),equal(ditto(-2),-2,"ditto(-2) -> -2"),equal(ditto(3),3,"ditto(3) -> 3"),expect(4)}),test("Create negative() function",function(){ok("undefined"!=typeof negative,"negative() is properly created."),equal(negative(10),-10,"negative(10) -> -10"),equal(negative(-20),20,"negative(-20) -> 20"),equal(negative(30),-30,"negative(30) -> -30"),expect(4)}),test("Create reverse() function",function(){ok("undefined"!=typeof reverse,"negative() is properly created."),equal(reverse("ball","foot"),"football",'reverse("ball", "foot") -> "football"'),equal(reverse("bomb","the"),"thebomb",'reverse("bomb", "the") -> "thebomb"'),equal(reverse("der","red"),"redder",'reverse("der", "red") -> "redder"'),expect(4)})}),QUnit.module("Conditional Statement Exercises",function(){test("Create checkBirthday() function",function(){ok("undefined"!=typeof checkBirthday,"checkBirthday() is properly created."),equal(checkBirthday(!0),"It's your birthday!","checkBirthday(true) -> \"It's your birthday!\""),equal(checkBirthday(!1),void 0,"checkBirthday(false) -> undefined"),expect(3)}),test("Create checkHoliday() function",function(){ok("undefined"!=typeof checkHoliday,"checkHoliday() is properly created."),equal(checkHoliday(!0),void 0,"checkHoliday(true) -> undefined"),equal(checkHoliday(!1),"It's time to go to school!",'checkHoliday(false) -> "It\'s time to go to school!"'),expect(3)}),test("Create light() function",function(){ok("undefined"!=typeof light,"light() is properly created."),equal(light(!0),"Turn light off",'light(true) -> "Turn light off"'),equal(light(!1),"Turn light on",'light(false) -> "Turn light on"'),expect(3)}),test("Create engine() function",function(){ok("undefined"!=typeof engine,"engine() is properly created."),equal(engine(!0,!0),"Rev up",'engine(true, true) -> "Rev up"'),equal(engine(!0,!1),"Shutdown",'engine(true, false) -> "Shutdown"'),equal(engine(!1,!0),"Shutdown",'engine(false, true) -> "Shutdown"'),equal(engine(!1,!1),"Shutdown",'engine(false, false) -> "Shutdown"'),expect(5)}),test("Create gradeScore() function",function(){ok("undefined"!=typeof gradeScore,"gradeScore() is properly created."),equal(gradeScore(91),"A",'gradeScore(91) -> "A"'),equal(gradeScore(90),"B",'gradeScore(90) -> "B"'),equal(gradeScore(81),"B",'gradeScore(81) -> "B"'),equal(gradeScore(80),"C",'gradeScore(80) -> "C"'),equal(gradeScore(71),"C",'gradeScore(71) -> "C"'),equal(gradeScore(70),"C",'gradeScore(70) -> "C"'),equal(gradeScore(69),"C",'gradeScore(69) -> "C"'),expect(8)}),test("Create imDone() function",function(){ok("undefined"!=typeof imDone,"imDone() is properly created."),equal(imDone(!0,!0,!0),"yes",'imDone(true, true, true) -> "yes"'),equal(imDone(!0,!0,!1),"yes",'imDone(true, true, false) -> "yes"'),equal(imDone(!0,!1,!0),"yes",'imDone(true, false, true) -> "yes"'),equal(imDone(!1,!0,!0),"yes",'imDone(false, true, true) -> "yes"'),equal(imDone(!0,!1,!1),"no",'imDone(true, false, false) -> "no"'),equal(imDone(!1,!0,!1),"no",'imDone(false, true, false) -> "no"'),equal(imDone(!1,!1,!0),"no",'imDone(false, false, true) -> "no"'),equal(imDone(!1,!1,!1),"no",'imDone(false, false, false) -> "no"'),expect(9)})});
